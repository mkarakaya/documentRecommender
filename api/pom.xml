<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	
	
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.3.2.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>


	<modelVersion>4.0.0</modelVersion>
	<packaging>jar</packaging>


	<groupId>api</groupId>
	<artifactId>api</artifactId>
	<version>1.1.6</version>

	<properties>
		<cxf.version>3.1.4</cxf.version>
		<org.codehaus.jackson.version>1.9.11</org.codehaus.jackson.version>
		<httpcomponents.version>4.3.6</httpcomponents.version>
		<java.version>1.8</java.version>
		<spring-cloud-core.version>1.1.1.RELEASE</spring-cloud-core.version>

		<maven-compiler-plugin.version>2.3.1</maven-compiler-plugin.version>
		<maven-failsafe-plugin.version>2.12</maven-failsafe-plugin.version>
		<jacoco.version>0.7.2.201409121644</jacoco.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.6.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sree.textbytes</groupId>
			<artifactId>jtopia</artifactId>
			<version>0.0.3</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>2.3.3</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>3.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-core</artifactId>
			<version>4.9.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-analyzers</artifactId>
			<version>3.6.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-queries</artifactId>
			<version>4.9.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-analyzers-common</artifactId>
			<version>4.9.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-queryparser</artifactId>
			<version>4.9.0</version>
		</dependency>
        <dependency>
            <groupId>org.apache.pdfbox</groupId>
            <artifactId>pdfbox</artifactId>
            <version>1.0.0</version>
        </dependency>
        	<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.1-901-1.jdbc4</version>
		</dependency>
        
	</dependencies>
	
	<build>
		<plugins>
			<plugin>
                		<groupId>org.codehaus.mojo</groupId>
                		<artifactId>versions-maven-plugin</artifactId>
                		<version>2.2</version>
            		</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
					<debug>true</debug>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
<!-- 					<argLine>${surefireArgLine}</argLine> -->
				</configuration>
				<executions>
					<execution>
						<id>run-tests</id>
						<phase>integration-test</phase>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>com.Application</mainClass>
				</configuration>
			</plugin>
			<plugin>
  				<groupId>org.jacoco</groupId>
  				<artifactId>jacoco-maven-plugin</artifactId>
  				<version>${jacoco.version}</version>
  				<executions>
			        <!--
			            Prepares the property pointing to the JaCoCo runtime agent which
			            is passed as VM argument when Maven the Surefire plugin is executed.
			        -->
				        <execution>
				            <id>pre-unit-test</id>
				            <goals>
				                <goal>prepare-agent</goal>
				            </goals>
				            <configuration>
				                <!-- Sets the path to the file which contains the execution data. -->
				                <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
				                <!--
				                    Sets the name of the property containing the settings
				                    for JaCoCo runtime agent.
				                
				                <propertyName>surefireArgLine</propertyName>-->
				                <excludes>
					                <exclude>com/ge/predix/solsvc/boot/Application.class</exclude>
					                <exclude>com/ge/predix/solsvc/boot/PredixBootSecurityConfig.class</exclude>
				                </excludes>
				             </configuration>
				        </execution>
				        <!--
				            Ensures that the code coverage report for unit tests is created after
				            unit tests have been run.
				        -->
				        <execution>
				            <id>post-unit-test</id>
				            <phase>test</phase>
				            <goals>
				                <goal>report</goal>
				            </goals>
				            <configuration>
				                <!-- Sets the path to the file which contains the execution data. -->
				                <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
				                <!-- Sets the output directory for the code coverage report. -->
				                <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
				            </configuration>
				        </execution>
				         <execution>
				            <id>pre-integration-test</id>
				            <phase>pre-integration-test</phase>
				            <goals>
				                <goal>prepare-agent</goal>
				            </goals>
				            <configuration>
				                <!-- Sets the path to the file which contains the execution data. -->
				                <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
				                <!--
				                    Sets the name of the property containing the settings
				                    for JaCoCo runtime agent.
				               
				                <propertyName>failsafeArgLine</propertyName> -->
				            </configuration>
				        </execution>
				        <!--
				            Ensures that the code coverage report for integration tests after
				            integration tests have been run.
				        -->
				        <execution>
				            <id>post-integration-test</id>
				            <phase>post-integration-test</phase>
				            <goals>
				                <goal>report</goal>
				            </goals>
				            <configuration>
				                <!-- Sets the path to the file which contains the execution data. -->
				                <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
				                <!-- Sets the output directory for the code coverage report. -->
				                <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
				            </configuration>
				        </execution>
			    </executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>
											jacoco-maven-plugin
										</artifactId>
										<versionRange>
											[0.7.2.201409121644,)
										</versionRange>
										<goals>
											<goal>prepare-agent</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
		<profiles>
		<profile>
			<id>production</id>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<excludes>
							<exclude>static/resources/bower_components/**/*</exclude>
							<exclude>static/resources/styles/**/*</exclude>
							<exclude>static/resources/elements.html</exclude>
						</excludes>
					</resource>
				</resources>
				<plugins>
					<plugin>
						<artifactId>exec-maven-plugin</artifactId>
						<groupId>org.codehaus.mojo</groupId>
						<executions>
							<execution>
								<id>Vulcanize</id>
								<phase>process-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>gulp</executable>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>